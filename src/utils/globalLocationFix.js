// utils/globalLocationFix.js

import React from "react";

/**
 * –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏
 * @param {any} value - –ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
 * @param {string} fallback - –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
 * @returns {string}
 */
export const safeString = (value, fallback = "") => {
  if (value === null || value === undefined) {
    return fallback;
  }

  if (typeof value === "string") {
    return value;
  }

  if (typeof value === "number") {
    return value.toString();
  }

  if (typeof value === "boolean") {
    return value.toString();
  }

  // –ï—Å–ª–∏ —ç—Ç–æ –æ–±—ä–µ–∫—Ç, –ø—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
  if (typeof value === "object") {
    return extractLocationString(value) || fallback;
  }

  try {
    return String(value);
  } catch (error) {
    console.warn("Error converting to string:", error, value);
    return fallback;
  }
};

/**
 * –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —á–∏—Å–ª–∞
 * @param {any} value - –ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
 * @param {number} fallback - –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
 * @returns {number}
 */
export const safeNumber = (value, fallback = 0) => {
  if (value === null || value === undefined) {
    return fallback;
  }

  if (typeof value === "number" && !isNaN(value)) {
    return value;
  }

  if (typeof value === "string") {
    const parsed = parseFloat(value);
    return isNaN(parsed) ? fallback : parsed;
  }

  if (typeof value === "boolean") {
    return value ? 1 : 0;
  }

  return fallback;
};

/**
 * –ò–∑–≤–ª–µ–∫–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –ª–æ–∫–∞—Ü–∏–∏ –∏–∑ –æ–±—ä–µ–∫—Ç–∞
 * @param {any} locationObj - –û–±—ä–µ–∫—Ç –ª–æ–∫–∞—Ü–∏–∏
 * @returns {string}
 */
export const extractLocationString = (locationObj) => {
  if (!locationObj || typeof locationObj !== "object") {
    return "";
  }

  try {
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ —Å –∫–ª—é—á–∞–º–∏ {country, city, coordinates, address, nearbyAttractions}
    if (locationObj.city && locationObj.country) {
      return `${locationObj.city}, ${locationObj.country}`;
    }

    if (locationObj.address && typeof locationObj.address === "string") {
      return locationObj.address;
    }

    if (locationObj.city && typeof locationObj.city === "string") {
      return locationObj.city;
    }

    if (locationObj.country && typeof locationObj.country === "string") {
      return locationObj.country;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–æ–ª—è
    const possibleFields = [
      "formatted_address",
      "description",
      "name",
      "region",
      "state",
      "place_name",
      "display_name",
      "label",
      "title",
    ];

    for (const field of possibleFields) {
      if (locationObj[field] && typeof locationObj[field] === "string") {
        return locationObj[field];
      }
    }

    // –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞ - –±–µ—Ä–µ–º –ø–µ—Ä–≤–æ–µ —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    for (const key in locationObj) {
      const value = locationObj[key];
      if (typeof value === "string" && value.trim() && key !== "coordinates") {
        return value.trim();
      }
    }

    return "";
  } catch (error) {
    console.warn("Error extracting location string:", error, locationObj);
    return "";
  }
};

/**
 * –ê–ì–†–ï–°–°–ò–í–ù–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –≤ –¥–∞–Ω–Ω—ã—Ö
 * @param {any} data - –î–∞–Ω–Ω—ã–µ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
 * @returns {any} - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
 */
export const fixLocationObjects = (data) => {
  if (!data) return data;

  // –ï—Å–ª–∏ —ç—Ç–æ –º–∞—Å—Å–∏–≤, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç
  if (Array.isArray(data)) {
    return data.map((item) => fixLocationObjects(item));
  }

  // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –æ–±—ä–µ–∫—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
  if (typeof data !== "object") {
    return data;
  }

  // –ï—Å–ª–∏ —ç—Ç–æ React —ç–ª–µ–º–µ–Ω—Ç, –Ω–µ —Ç—Ä–æ–≥–∞–µ–º
  if (React.isValidElement(data)) {
    return data;
  }

  // –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –æ–±—ä–µ–∫—Ç–∞
  const fixed = { ...data };

  // –ê–ì–†–ï–°–°–ò–í–ù–û –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ –ø–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –æ–±—ä–µ–∫—Ç–∞–º–∏
  for (const key in fixed) {
    const value = fixed[key];

    if (
      value &&
      typeof value === "object" &&
      !Array.isArray(value) &&
      !React.isValidElement(value)
    ) {
      // –ï—Å–ª–∏ —ç—Ç–æ –ø–æ—Ö–æ–∂–µ –Ω–∞ –æ–±—ä–µ–∫—Ç –ª–æ–∫–∞—Ü–∏–∏
      if (
        key.toLowerCase().includes("location") ||
        key.toLowerCase().includes("address") ||
        (value.city && value.country) ||
        (value.coordinates && value.address)
      ) {
        const locationString = extractLocationString(value);
        fixed[key] = locationString || "Location not specified";

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        fixed[`_original_${key}`] = value;

        console.log(
          `üîß Fixed location object in ${key}:`,
          value,
          "‚Üí",
          fixed[key]
        );
      } else {
        // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥—Ä—É–≥–∏–µ –æ–±—ä–µ–∫—Ç—ã
        fixed[key] = fixLocationObjects(value);
      }
    }
  }

  return fixed;
};

/**
 * –£–õ–¨–¢–†–ê-–ê–ì–†–ï–°–°–ò–í–ù–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤
 * @param {any} data - –î–∞–Ω–Ω—ã–µ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
 * @returns {any} - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
 */
export const ultraFixAllObjects = (data) => {
  if (!data) return data;

  // –ï—Å–ª–∏ —ç—Ç–æ –º–∞—Å—Å–∏–≤, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç
  if (Array.isArray(data)) {
    return data.map((item) => ultraFixAllObjects(item));
  }

  // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –æ–±—ä–µ–∫—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
  if (typeof data !== "object") {
    return data;
  }

  // –ï—Å–ª–∏ —ç—Ç–æ React —ç–ª–µ–º–µ–Ω—Ç, –Ω–µ —Ç—Ä–æ–≥–∞–µ–º
  if (React.isValidElement(data)) {
    return data;
  }

  // –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –æ–±—ä–µ–∫—Ç–∞
  const fixed = {};

  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–µ –ø–æ–ª–µ
  for (const key in data) {
    const value = data[key];

    if (
      value &&
      typeof value === "object" &&
      !Array.isArray(value) &&
      !React.isValidElement(value)
    ) {
      // –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –∫–ª—é—á–∏
      const suspiciousKeys = [
        "country",
        "city",
        "coordinates",
        "address",
        "nearbyAttractions",
      ];
      const hasSuspiciousKeys = suspiciousKeys.some((k) => k in value);

      if (hasSuspiciousKeys) {
        console.warn(`üö® Found suspicious object in ${key}:`, value);
        fixed[key] = extractLocationString(value) || "Location not specified";
      } else {
        // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º
        fixed[key] = ultraFixAllObjects(value);
      }
    } else {
      fixed[key] = value;
    }
  }

  return fixed;
};

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –∑–Ω–∞—á–µ–Ω–∏–π
 * –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫—É "Objects are not valid as a React child"
 */
export const SafeRender = ({ children, fallback = "" }) => {
  try {
    // –ï—Å–ª–∏ children - —ç—Ç–æ null –∏–ª–∏ undefined
    if (children === null || children === undefined) {
      return fallback;
    }

    // –ï—Å–ª–∏ children - —ç—Ç–æ –æ–±—ä–µ–∫—Ç (–Ω–æ –Ω–µ React —ç–ª–µ–º–µ–Ω—Ç)
    if (typeof children === "object" && !React.isValidElement(children)) {
      console.warn("SafeRender: Attempted to render object:", children);

      // –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å —Å—Ç—Ä–æ–∫—É –∏–∑ –æ–±—ä–µ–∫—Ç–∞
      if (children.city && children.country) {
        return `${children.city}, ${children.country}`;
      }

      if (children.address) {
        return children.address;
      }

      if (children.name) {
        return children.name;
      }

      // –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –∏–∑–≤–ª–µ—á—å —Å—Ç—Ä–æ–∫—É, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º fallback
      return fallback;
    }

    // –ï—Å–ª–∏ children - —ç—Ç–æ –º–∞—Å—Å–∏–≤
    if (Array.isArray(children)) {
      return children.map((child, index) => (
        <SafeRender key={index} fallback={fallback}>
          {child}
        </SafeRender>
      ));
    }

    return children;
  } catch (error) {
    console.warn("SafeRender error:", error, children);
    return fallback;
  }
};

/**
 * –ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ—Ç–µ–ª—è, –∏—Å–ø—Ä–∞–≤–ª—è—è –≤—Å–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –ø–æ–ª—è
 * @param {object} hotel - –î–∞–Ω–Ω—ã–µ –æ—Ç–µ–ª—è
 * @returns {object} - –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
 */
export const normalizeHotelData = (hotel) => {
  if (!hotel) return hotel;

  try {
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —É–ª—å—Ç—Ä–∞-–∞–≥—Ä–µ—Å—Å–∏–≤–Ω—É—é —Ñ–∏–∫—Å–∞—Ü–∏—é
    const ultraFixed = ultraFixAllObjects(hotel);
    const normalized = fixLocationObjects(ultraFixed);

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    const result = {
      ...normalized,
      id: safeString(normalized.id),
      name: safeString(normalized.name, "Hotel Name"),
      description: safeString(normalized.description, ""),
      price: safeNumber(normalized.price, 100),
      rating: safeNumber(normalized.rating, 4.5),
      starRating: safeNumber(normalized.starRating, 5),
      images: Array.isArray(normalized.images) ? normalized.images : [],
      amenities: Array.isArray(normalized.amenities)
        ? normalized.amenities
        : [],
      location: safeString(normalized.location, "Location not specified"),
      city: safeString(normalized.city, ""),
      country: safeString(normalized.country, ""),
      address: safeString(normalized.address, ""),
    };

    // –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - —É–±–∏—Ä–∞–µ–º –≤—Å–µ –æ–±—ä–µ–∫—Ç—ã
    for (const key in result) {
      if (
        typeof result[key] === "object" &&
        result[key] !== null &&
        !Array.isArray(result[key])
      ) {
        console.warn(`üö® Removing object from ${key}:`, result[key]);
        result[key] = safeString(result[key], "");
      }
    }

    return result;
  } catch (error) {
    console.error("Error normalizing hotel data:", error, hotel);
    return hotel;
  }
};

/**
 * –û—Ç–ª–∞–¥–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –≤ –¥–∞–Ω–Ω—ã—Ö
 * @param {any} data - –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
 * @param {string} context - –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
 */
export const debugCheckForObjects = (data, context = "Unknown") => {
  if (!data) return;

  const foundObjects = [];

  const checkValue = (value, path = "") => {
    if (
      typeof value === "object" &&
      value !== null &&
      !Array.isArray(value) &&
      !React.isValidElement(value)
    ) {
      foundObjects.push({ path: `${context}${path}`, value });
      console.warn(`üö® Found object in ${context}${path}:`, value);
    }

    if (Array.isArray(value)) {
      value.forEach((item, index) => {
        checkValue(item, `${path}[${index}]`);
      });
    } else if (typeof value === "object" && value !== null) {
      Object.keys(value).forEach((key) => {
        checkValue(value[key], `${path}.${key}`);
      });
    }
  };

  if (Array.isArray(data)) {
    data.forEach((item, index) => {
      checkValue(item, `[${index}]`);
    });
  } else {
    checkValue(data);
  }

  return foundObjects;
};

// –≠–∫—Å–ø–æ—Ä—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
export default {
  safeString,
  safeNumber,
  extractLocationString,
  fixLocationObjects,
  ultraFixAllObjects,
  SafeRender,
  normalizeHotelData,
  debugCheckForObjects,
};
